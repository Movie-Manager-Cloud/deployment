name: Destroy Terraform
on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Confirm Destroy'
        required: true
        default: 'yes'
      aws_access_key_id:
          description: 'AWS Access Key ID'
          required: true
          default: ''
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
        default: ''

env:
  AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_access_key }}
  AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key_id }}

jobs:
  artifact_decrypted:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    name: Artifact Decrypted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: qoomon/actions--access-token@v3
        id: access-token
        with:
          permissions: |
              actions: read

      - name: Download Encrypted Artifact & Decrypt Artifact
        uses: badgerhobbs/terraform-state@v2
        with:
          encryption_key: ${{ secrets.encryption_key }}
          operation: download
          location: artifact
          github_token: ${{ steps.access-token.outputs.token }}
        continue-on-error: true

      - name: Configure Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Initialize Terraform
        run: terraform init

      - name: Configure Kubectl
        run: |
          chmod +x configure_kubectl.sh
          ./configure_kubectl.sh
      
      - name: Destroy Helm
        run: |
          chmod +x delete_helm.sh
          ./delete_helm.sh
      
      - name: Check Confirm Destroy Input
        if: ${{ github.event.inputs.confirm_destroy != 'yes' }}
        run: |
          echo "Destroy not confirmed. Exiting..."
          exit 1
      
      - name: Destroy Terraform
        run: terraform destroy -auto-approve -var="run_id=${{ github.run_id }}"

      - name: Encrypt Artifact & Upload Encrypted Artifact
        uses: badgerhobbs/terraform-state@v2
        with:
          encryption_key: ${{ secrets.encryption_key }}
          operation: upload
          location: artifact
          # github_token: ${{ secrets.gh_access_token }}